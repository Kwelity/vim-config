---
## PLUGINS
## ===
## See config/plugins/all.vim for plugin mappings
#
## Startup
## -------
- repo: Shougo/dein.vim
- repo: rafi/awesome-vim-colorschemes
- repo: itchyny/vim-gitbranch
- repo: itchyny/vim-parenmatch
- repo: thinca/vim-localrc
- repo: romainl/vim-cool
- repo: sgur/vim-editorconfig

- repo: christoomey/vim-tmux-navigator
  if: "! (has('win32') || has('win64'))"



- repo: tpope/vim-sleuth
  hook_add: let g:sleuth_neighbor_limit = 5
# GUI only:
- { repo: equalsraf/neovim-gui-shim, if: has('gui_running') }

# Vim8 only:
- { repo: roxma/nvim-yarp, if: "! has('nvim')", depends: vim-hug-neovim-rpc }
- { repo: roxma/vim-hug-neovim-rpc, if: "! has('nvim')" }

# Lazy Loading
# ==========================================

# Languages
# ---------

- { repo: sheerun/vim-polyglot}
- { repo: itkq/fluentd-vim}

- { repo: jparise/vim-graphql, on_ft: [ javascript, jsx ] }

- repo: pearofducks/ansible-vim
  on_ft: [ ansible, ansible_hosts, jinja2 ]
  hook_add: |
    let g:ansible_extra_keywords_highlight = 1
    let g:ansible_template_syntaxes = {
      \   '*.json.j2': 'json',
      \   '*.(ba)?sh.j2': 'sh',
      \   '*.ya?ml.j2': 'yaml',
      \   '*.xml.j2': 'xml',
      \   '*.conf.j2': 'conf',
      \   '*.ini.j2': 'ini'
      \ }

- repo: hashivim/vim-terraform
  on_ft: terraform
  on_cmd: [ Terraform, TerraformFmt ]
  hook_add: let g:terraform_fmt_on_save = 1

## ==========================================
## Commands
## --------
- repo: Shougo/defx.nvim
  on_cmd: Defx
  hook_source: source $VIM_PATH/config/plugins/defx.vim

- { repo: kristijanhusak/defx-git, on_source: defx.nvim }
- { repo: kristijanhusak/defx-icons, on_source: defx.nvim }

- { repo: tyru/caw.vim, on_map: { nx: <Plug> }}
- { repo: liuchengxu/vim-which-key, on_cmd: WhichKey }
- { repo: mbbill/undotree, on_cmd: UndotreeToggle }
- { repo: metakirby5/codi.vim, on_cmd: Codi }
- { repo: jreybert/vimagit, on_cmd: Magit }
- { repo: lambdalisue/gina.vim, on_cmd: Gina }
- { repo: kana/vim-altr, on_map: { n: <Plug> }}
- { repo: Shougo/vinarise.vim, on_cmd: Vinarise }
- { repo: guns/xterm-color-table.vim, on_cmd: XtermColorTable }
- { repo: cocopon/colorswatch.vim, on_cmd: ColorSwatchGenerate }

- repo: kana/vim-niceblock
  on_map: { x: <Plug> }
  hook_add: let g:niceblock_no_default_key_mappings = 0

- repo: t9md/vim-choosewin
  on_map: { n: <Plug> }
  hook_add: |
    let g:choosewin_label = 'SDFJKLZXCV'
    let g:choosewin_overlay_enable = 1
    let g:choosewin_statusline_replace = 1
    let g:choosewin_overlay_clear_multibyte = 0
    let g:choosewin_blink_on_land = 1

- repo: lambdalisue/suda.vim
  on_event: BufRead
  hook_add: let g:suda_smart_edit = 1

- repo: tpope/vim-abolish

- repo: junegunn/vim-easy-align

- repo: junegunn/gv.vim

- repo: mzlogin/vim-markdown-toc
  on_cmd: [ GenTocGFM, GenTocRedcarpet, GenTocGitLab, UpdateToc ]
  hook_add: let g:vmt_auto_update_on_save = 0

- repo: haya14busa/incsearch.vim

- repo: haya14busa/incsearch-fuzzy.vim

- repo: liuchengxu/vista.vim
  on_cmd: Vista
  hook_add: |
    let g:vista#renderer#enable_icon = 1
    let g:vista_echo_cursor_strategy = 'scroll'

- repo: Ron89/thesaurus_query.vim
  on_cmd:
    - Thesaurus
    - ThesaurusQueryReplaceCurrentWord
    - ThesaurusQueryLookupCurrentWord
  hook_add: |
    let g:tq_map_keys = 0
    let g:tq_use_vim_autocomplete = 0

- repo: diepm/vim-rest-console
  hook_add: |
    let g:vrc_set_default_mapping = 0
  # on_map: { n: <Plug> }

- repo: jremmen/vim-ripgrep

- repo: lfilho/cosco.vim
  hook_add: |
    nmap <silent> <Leader>; <Plug>(cosco-commaOrSemiColon)

- repo: lotabout/skim.vim

# ==========================================
# Interface
# ---------
- { repo: haya14busa/vim-asterisk, on_map: { nv: <Plug> }}
- { repo: haya14busa/vim-edgemotion, on_map: { nv: <Plug> }}
- { repo: t9md/vim-quickhl, on_map: { nv: <Plug> }}
- { repo: hotwatermorning/auto-git-diff, on_ft: gitrebase }
- { repo: rafi/vim-sidemenu, on_map: { nv: <Plug> }}
- { repo: sharat87/roast.vim }
- { repo: baverman/vial }
- { repo: baverman/vial-http }
- { repo: junegunn/vim-peekaboo }

- repo: samoshkin/vim-mergetool

- repo: rhysd/vim-color-spring-night

- repo: tpope/vim-fugitive

# - repo: RRethy/vim-hexokinase
#   on_ft: [ css, scss, sass, stylus, vim ]
#   hook_add: |
#     let g:Hexokinase_ftAutoload = [ 'css', 'scss', 'sass', 'stylus' ]

- repo: itchyny/vim-cursorword
  on_path: .*
  hook_source: |
    augroup user_plugin_cursorword
      autocmd!
      autocmd FileType denite,qf,easygitblame let b:cursorword = 0
      autocmd WinEnter * if &diff | let b:cursorword = 0 | endif
      autocmd InsertEnter * let b:cursorword = 0
      autocmd InsertLeave * let b:cursorword = 1
    augroup END

- repo: norcalli/nvim-colorizer.lua
  if: has('nvim') && has('nvim-0.4.0')
  on_path: .*
  hook_source: luafile $VIM_PATH/config/plugins/colorizer.lua

- repo: airblade/vim-gitgutter
  on_path: .*
  hook_add: |
    let g:gitgutter_map_keys = 0
    let g:gitgutter_sign_added = '▎'
    let g:gitgutter_sign_modified = '▎'
    let g:gitgutter_sign_removed = '▏'
    let g:gitgutter_sign_removed_first_line = '▔'
    let g:gitgutter_sign_modified_removed = '▋'
    let g:gitgutter_preview_win_floating = 1
    let g:gitgutter_sign_allow_clobber = 0
    let g:gitgutter_sign_priority = 0
    let g:gitgutter_override_sign_column_highlight = 0

- repo: kshenoy/vim-signature
  depends: vim-gitgutter
  on_path: .*
  hook_add: |
    let g:SignatureForceRemoveGlobal = 0
    let g:SignatureUnconditionallyRecycleMarks = 1
    let g:SignatureErrorIfNoAvailableMarks = 0
    let g:SignaturePurgeConfirmation = 0
    let g:SignatureMarkTextHLDynamic = 1
    let g:SignatureMarkerTextHLDynamic = 1
    let g:SignatureIncludeMarkers = repeat('⚐', 10)
    autocmd user_events User GitGutter call signature#sign#Refresh()

- repo: nathanaelkane/vim-indent-guides
  on_cmd: [ IndentGuidesEnable, IndentGuidesDisable, IndentGuidesToggle ]
  hook_post_source: |
    call indent_guides#init_script_vars()
    call indent_guides#highlight_colors()
  hook_add: |
    let g:indent_guides_color_change_percent = 3
    let g:indent_guides_autocmds_enabled = 0
    let g:indent_guides_default_mapping = 0
    let g:indent_guides_guide_size = 1
    let g:indent_guides_indent_levels = 25
    let g:indent_exclude = [ 'help', 'denite', 'codi' ]
    augroup user_plugin_indentguides
      autocmd!
      autocmd BufEnter *
      \ if ! empty(&l:filetype) && index(g:indent_exclude, &l:filetype) == -1
      \|   if g:indent_guides_autocmds_enabled == 0 && &l:expandtab
      \|     IndentGuidesEnable
      \|   elseif g:indent_guides_autocmds_enabled == 1 && ! &l:expandtab
      \|     IndentGuidesDisable
      \|   endif
      \| endif
    augroup END
    if ! has('vim_starting')
      doautocmd <nomodeline> user_plugin_indentguides BufEnter
    endif


- repo: rhysd/committia.vim
  on_path: COMMIT_EDITMSG
  hook_source: let g:committia_min_window_width = 70

- repo: benekastah/neomake
  on_path: .*
  on_cmd: [ Neomake, NeomakeFile, NeomakeEnable, NeomakeToggle, NeomakeInfo ]
  hook_source: |
    source $VIM_PATH/config/plugins/neomake.vim
    call neomake#configure#automake('rwn', 300)

- repo: junegunn/goyo.vim
  depends: limelight.vim
  on_cmd: Goyo
  hook_source: source $VIM_PATH/config/plugins/goyo.vim

- repo: junegunn/limelight.vim
  on_cmd: Limelight

- repo: vimwiki/vimwiki
  on_map: { n: <Plug> }
  on_cmd: [ VimwikiIndex, VimwikiUISelect ]
  hook_add: |
    let g:vimwiki_use_calendar = 1
    let g:vimwiki_hl_headers = 1
    let g:vimwiki_hl_cb_checked = 1
    let g:vimwiki_autowriteall = 0
  hook_source: |
    let g:vimwiki_list = [
    \   { 'diary_header': 'Diary',
    \     'diary_link_fmt': '%Y-%m/%d',
    \     'auto_toc': 1,
    \     'path': '~/Projects/docs/wiki/',
    \     'syntax': 'markdown',
    \     'ext': '.md' },
    \   { 'path': '~/docs/blog/',
    \     'syntax': 'markdown',
    \     'ext': '.md' }
    \ ]

- repo: mhinz/vim-startify
- repo: wellle/visual-split.vim

# ==========================================
# Completion
# ----------

- repo: neoclide/coc.nvim
  on_ft: [rust, json, javascript]
  merge: 0
  rev: release
  hook_source: source $VIM_PATH/config/plugins/coc.vim

- repo: Shougo/deoplete.nvim
  depends: context_filetype.vim
  on_event: InsertEnter
  hook_source: |
    source $VIM_PATH/config/plugins/deoplete.vim
    call deoplete#enable()

- repo: deoplete-plugins/deoplete-go
  build: make
  on_ft: go
  on_event: InsertEnter

- repo: deoplete-plugins/deoplete-jedi
  on_ft: python
  on_event: InsertEnter
  hook_source: autocmd user_events FileType python setlocal omnifunc=

- repo: carlitux/deoplete-ternjs
  build: npm install -g tern
  if: executable('npm')
  on_event: InsertEnter
  on_ft: [ javascript, javascriptreact ]
  hook_source: autocmd user_events FileType javascript setlocal omnifunc=

- repo: fszymanski/deoplete-emoji
  on_ft: [ markdown, gitcommit ]
  on_event: InsertEnter

- repo: Shougo/neosnippet.vim
  depends: [ neosnippet-snippets, context_filetype.vim ]
  on_event: InsertCharPre
  on_ft: snippet
  hook_add: let g:neosnippet#data_directory = $DATA_PATH . '/snippets'
  hook_source: |
    let g:neosnippet#enable_snipmate_compatibility = 1
    let g:neosnippet#enable_completed_snippet = 1
    let g:neosnippet#enable_complete_done = 1
    let g:neosnippet#expand_word_boundary = 1
    let g:neosnippet#enable_auto_clear_markers = 1

- repo: Shougo/echodoc.vim
  on_event: CompleteDone
  hook_post_source: call echodoc#enable()

- { repo: Shougo/neosnippet-snippets, on_source: neosnippet.vim }
- { repo: Shougo/context_filetype.vim, lazy: 1 }
- { repo: Shougo/neco-vim, on_ft: vim }
- { repo: Shougo/neoinclude.vim, on_source: deoplete.nvim }
- { repo: Shougo/neco-syntax, on_source: deoplete.nvim }

- repo: davidhalter/jedi-vim
  on_ft: python
  hook_add: |
    let g:jedi#completions_enabled = 0
    let g:jedi#auto_vim_configuration = 0
    let g:jedi#show_call_signatures = 0
  hook_source: |
    let g:jedi#use_tag_stack = 0
    let g:jedi#popup_select_first = 0
    let g:jedi#popup_on_dot = 0
    let g:jedi#max_doc_height = 100
    let g:jedi#quickfix_window_height = 10
    let g:jedi#use_splits_not_buffers = 'right'

- repo: ternjs/tern_for_vim
  build: npm install
  if: executable('npm')
  on_event: InsertEnter
  on_ft: [ javascript, javascriptreact ]
  hook_add: |
    let g:tern#command = ['tern']
    let g:tern#arguments = ['--persistent']
    let g:tern_request_timeout = 1
    let g:tern_show_signature_in_pum = 0
    let g:tern_set_omni_function = 0

- repo: wellle/tmux-complete.vim
  if: "! (has('win32') || has('win64'))"
  on_event: InsertEnter
  hook_add: let g:tmuxcomplete#trigger = ''

- repo: mattn/emmet-vim
  on_event: InsertEnter
  on_ft: [ html, css, javascript, javascriptreact ]
  hook_source: |
    let g:user_emmet_complete_tag = 0
    let g:user_emmet_install_global = 0
    let g:user_emmet_install_command = 0
    let g:user_emmet_mode = 'i'

- repo: ludovicchabant/vim-gutentags
  if: executable('ctags')
  on_path: .*
  hook_add: |
    let g:gutentags_cache_dir = $DATA_PATH . '/tags'
    let g:gutentags_generate_on_write = 1
    let g:gutentags_generate_on_missing = 1
    let g:gutentags_generate_on_new = 0
    let g:gutentags_exclude_project_root = [ '/usr/local' ]
    let g:gutentags_exclude_filetypes = [ 'defx', 'denite', 'vista', 'magit' ]
    let g:gutentags_ctags_exclude_wildignore = 1
    let g:gutentags_ctags_exclude = [
      \ '.idea', '.cache', '.tox', '.bundle', 'build', 'dist',
      \ '*/wp-admin', '*/wp-content', '*/wp-includes',
      \ '*/application/vendor', '*/vendor/ckeditor', '*/media/vendor'
      \ ]

- repo: Raimondi/delimitMate
  on_event: InsertEnter
  hook_source: |
    let g:delimitMate_expand_cr = 1
    let g:delimitMate_excluded_ft = 'html'

# ==========================================
# Denite
# ------
- repo: Shougo/denite.nvim
  on_cmd: Denite
  trusted: 1
  hook_source: source $VIM_PATH/config/plugins/denite.vim

- repo: Shougo/neomru.vim
  on_source: denite.nvim
  hook_add: |
    let g:neomru#directory_mru_path = $DATA_PATH . '/mru/dir'
    let g:neomru#file_mru_path = $DATA_PATH . '/mru/file'
    let g:unite_source_file_mru_limit = 5000

- { repo: Shougo/neoyank.vim, on_source: denite.nvim, on_event: TextYankPost }
- { repo: Shougo/junkfile.vim, on_source: denite.nvim }
- { repo: chemzqm/unite-location, on_source: denite.nvim }
- { repo: chemzqm/denite-git, on_source: denite.nvim }
- { repo: rafi/vim-denite-session, on_source: denite.nvim }
- { repo: raineszm/denite-fasd.nvim, on_source: denite.nvim }


# ==========================================
# Operators
# ---------
- repo: kana/vim-operator-user  # only autoload functions, lazy by nature

- repo: kana/vim-operator-replace
  depends: vim-operator-user
  on_map: { vnx: <Plug> }

- repo: machakann/vim-sandwich
  depends: vim-operator-user
  on_map: { vonx: <Plug>(operator-sandwich- }
  hook_add: |
    let g:sandwich_no_default_key_mappings = 1
    let g:operator_sandwich_no_default_key_mappings = 1
    let g:textobj_sandwich_no_default_key_mappings = 1

- repo: haya14busa/vim-operator-flashy
  depends: vim-operator-user
  on_map: { nx: <Plug> }

# ==========================================
# Text objects
# ------------
- repo: kana/vim-textobj-user  # only autoload functions, lazy by nature
- { repo: terryma/vim-expand-region, on_map: { x: <Plug> }}
- { repo: AndrewRadev/sideways.vim, on_map: { onx: <Plug>Sideways }}
- { repo: AndrewRadev/splitjoin.vim, on_map: { n: <Plug>Splitjoin }}
- { repo: AndrewRadev/linediff.vim, on_cmd: Linediff }

- repo: osyo-manga/vim-textobj-multiblock
  depends: vim-textobj-user
  on_map: { ox: <Plug> }
  hook_add: let g:textobj_multiblock_no_default_key_mappings = 1

- repo: kana/vim-textobj-function
  depends: vim-textobj-user
  on_map: { ox: <Plug> }
  hook_add: let g:textobj_function_no_default_key_mappings = 1

# ==========================================
# Others
# ------------
- repo: meain/vim-package-info
  build: npm install

- repo: rhysd/git-messenger.vim

#  vim: set ts=2 sw=2 tw=80 et :
